buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin"

        // TODO: might be removed when https://hibernate.atlassian.net/browse/HHH-13354 is resolved
        //classpath "org.hibernate:hibernate-gradle-plugin:$hibernateGradlePluginVersion"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'

    // Create start scripts
    // Is executed on "build" task but not on e.g. "jar" task
    id 'application'

    // Bundle all dependencies into one fat shadowed jar
    // (Gets automatically triggered when application plugin is present)
    id 'com.github.johnrengelman.shadow'
}

ext {
    _group = applicationGroup
    _module = applicationModule
    _mainClass = _group + "." + _module + ".Application"
    _title = applicationTitle
}

// application plugin configuration
applicationName = _title
mainClassName = _mainClass

repositories {
    //mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
    mavenCentral()
}

dependencies {
    implementation 'org.apache.httpcomponents:httpclient:4.5.3'
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.3'
    implementation 'org.apache.httpcomponents:httpmime:4.5.3'
    implementation 'commons-io:commons-io:2.5'
    implementation 'commons-lang:commons-lang:2.6'
//    implementation 'org.slf4j:slf4j-api:1.7.12'
//    implementation 'org.slf4j:jcl-over-slf4j:1.7.12'
//    implementation 'org.slf4j:slf4j-log4j12:1.7.12'
//    implementation 'log4j:log4j:1.2.17'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Logging
    // See http://saltnlight5.blogspot.com/2013/08/how-to-configure-slf4j-with-different.html for a quick introduction to slf4j
    //implementation "io.github.microutils:kotlin-logging-jvm:$kotlinLoggingVersion"
    implementation 'ch.qos.logback:logback-core:1.2.3' // TODO: remove this if migrated to Kotlin
    implementation 'org.slf4j:slf4j-api:1.7.30' // TODO: remove this if migrated to Kotlin
    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"
    runtimeOnly "net.logstash.logback:logstash-logback-encoder:$logstashLogbackVersion"

    // OpenAPI Kotlin generator
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    implementation "com.squareup.moshi:moshi-adapters:1.9.2"
    implementation "com.squareup.okhttp3:okhttp:4.2.2"
}

group = 'de.debuglevel.liberatepdf2'
version = '0.0.1-SNAPSHOT'
description = 'LiberatePDF2 JavaFX Client'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// jar configuration
jar {
    // add Manifest to jar
    manifest {
        attributes 'Implementation-Title': applicationTitle,
                'Implementation-Version': version,
                'Main-Class': _mainClass
    }
}

// Appends entries in META-INF/services resources into a single resource. Not sure, if needed.
// see: https://github.com/johnrengelman/shadow/blob/master/src/main/groovy/com/github/jengelman/gradle/plugins/shadow/transformers/ServiceFileTransformer.groovy
shadowJar {
    mergeServiceFiles()
}

// deactivate zip generations in distributions folder as they are not very useful and take relatively much build time
tasks.distZip.enabled = false
tasks.shadowDistZip.enabled = false